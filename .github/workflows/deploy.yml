name: Build, Push & Deploy to Vultr

on:
  push:
    branches:
      - master  # Runs on every push to main
  workflow_dispatch: # Allows manual trigger

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      client_changed: ${{ steps.filter.outputs.client }}
      server_changed: ${{ steps.filter.outputs.server }}
      should_deploy: ${{ steps.filter.outputs.client == 'true' || steps.filter.outputs.server == 'true' }}

    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            client:
              - 'client/**'
            server:
              - 'server/**'

  build-and-push:
    name: Build & Push Docker Images
    needs: check-changes
    if: ${{ needs.check-changes.outputs.should_deploy == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set APP_VERSION (CalVer+SHA)
        run: echo "APP_VERSION=$(date +'%Y.%m.%d')+${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Build & Push Laravel API Image
      - name: Build & Push CRM API (Laravel)
        uses: docker/build-push-action@v5
        with:
          context: ./server
          push: true
          build-args: |
            APP_VERSION=${{ env.APP_VERSION }}
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ secrets.SERVER_IMAGE }}:${{ env.APP_VERSION }}
            ${{ secrets.DOCKER_USERNAME }}/${{ secrets.SERVER_IMAGE }}:latest

      # Build & Push Angular Frontend Image
      - name: Build & Push CRM Client (Angular)
        uses: docker/build-push-action@v5
        with:
          context: ./client
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ secrets.CLIENT_IMAGE }}:${{ env.APP_VERSION }}
            ${{ secrets.DOCKER_USERNAME }}/${{ secrets.CLIENT_IMAGE }}:latest

  deploy:
    name: Deploy to Vultr
    runs-on: ubuntu-latest
    needs: build-and-push  # Deploy only after build & push is successful

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up SSH Connection
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VULTR_SSH_PRIVATE_KEY }}

      - name: Compute APP_VERSION for deploy
        run: echo "APP_VERSION=$(date +'%Y.%m.%d')+${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Deploy to Vultr Server (versioned tags)
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VULTR_USER }}@${{ secrets.VULTR_HOST }} << 'EOF'
            set -e
            export SERVER_TAG='${{ env.APP_VERSION }}'
            export CRM_API_TAG='${{ env.APP_VERSION }}'
            export CLIENT_TAG='${{ env.APP_VERSION }}'

            echo "Pulling versioned Docker images..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.SERVER_IMAGE }}:${SERVER_TAG}
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.CLIENT_IMAGE }}:${CLIENT_TAG}

            echo "Bringing up services with versioned tags..."
            cd ${{ secrets.SERVER_DIRECTORY }}
            docker-compose up -d --pull always

            echo "Deployment completed!"
          EOF